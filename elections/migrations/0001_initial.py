# -*- coding: utf-8 -*-
# Generated by Django 1.11.15 on 2021-03-20 18:25
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ballot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position_number', models.PositiveSmallIntegerField(default=1, help_text='Change this if you want to customize the order in which ballots are shown for an election.')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('introduction', models.TextField(blank=True, help_text='If this field is non-empty, it will be shown below the ballot header on the voting page. Enter the text as HTML.')),
            ],
            options={
                'ordering': ('position_number',),
            },
        ),
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('info', models.TextField(blank=True)),
                ('incumbent', models.BooleanField(default=False)),
                ('ballot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidates', to='elections.Ballot')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Election',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Used to uniquely identify elections. Will be shown with ' Election' appended to it on all publicly-visible pages.", max_length=127, unique=True)),
                ('introduction', models.TextField(blank=True, help_text='This is printed at the top of the voting page below the header. Enter the text as HTML.')),
                ('nomination_introduction', models.TextField(blank=True, help_text='This is printed at the top of the nomination page below the header. Enter the text as HTML.')),
                ('nomination_start', models.DateTimeField(help_text='Start of nominations')),
                ('nomination_end', models.DateTimeField(help_text='End of nominations')),
                ('vote_start', models.DateTimeField(help_text='Start of voting')),
                ('vote_end', models.DateTimeField(help_text='End of voting')),
            ],
            options={
                'ordering': ('-vote_start',),
            },
        ),
        migrations.CreateModel(
            name='Nominee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.EmailField(help_text='MIT email address if available', max_length=254)),
                ('ballots', models.ManyToManyField(help_text="You may select as many as you'd like. (Hold Shift or \u2318 to select multiple)", to='elections.Ballot')),
            ],
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Voter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=10)),
                ('election', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='elections.Election')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='nominee',
            name='nominator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nominees', to='elections.Voter'),
        ),
        migrations.AddField(
            model_name='election',
            name='allowed_voters',
            field=models.ManyToManyField(through='elections.Voter', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='ballot',
            name='election',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ballots', to='elections.Election'),
        ),
        migrations.AlterUniqueTogether(
            name='voter',
            unique_together=set([('election', 'token'), ('election', 'user')]),
        ),
        migrations.AlterUniqueTogether(
            name='candidate',
            unique_together=set([('ballot', 'user')]),
        ),
    ]
