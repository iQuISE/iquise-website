# -*- coding: utf-8 -*-
# Generated by Django 1.11.15 on 2021-01-10 22:28
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import functools
import members.models


def make_missing_committees(apps, schema_editor):
    Group = apps.get_model("auth", "Group")
    Committee = apps.get_model("members", "Committee")
    for group in Group.objects.filter(committee__isnull=True):
        Committee(group=group).save()

class Migration(migrations.Migration):

    replaces = [(b'members', '0002_auto_20201221_2031'), (b'members', '0003_auto_20201227_1351'), (b'members', '0004_auto_20201228_1247'), (b'members', '0005_auto_20201228_1402'), (b'members', '0006_auto_20201229_1342'), (b'members', '0007_auto_20201229_1346'), (b'members', '0008_auto_20201230_1727'), (b'members', '0009_auto_20210103_1201'), (b'members', '0010_auto_20210103_1548'), (b'members', '0011_auto_20210104_2019'), (b'members', '0012_auto_20210109_1149'), (b'members', '0013_auto_20210109_1421'), (b'members', '0014_auto_20210109_1453')]

    dependencies = [
        ('members', '0001_initial'),
        ('auth', '0008_alter_user_username_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveField(
            model_name='person',
            name='MIT_ID',
        ),
        migrations.RemoveField(
            model_name='person',
            name='department',
        ),
        migrations.RemoveField(
            model_name='person',
            name='join_method',
        ),
        migrations.DeleteModel(
            name='Department',
        ),
        migrations.CreateModel(
            name='CommitteeMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateField(default=django.utils.timezone.localdate)),
                ('stop', models.DateField(blank=True, null=True)),
                ('committee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='auth.Group')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='committees', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('index', models.SmallIntegerField(default=0, help_text='Order to render on page.')),
                ('committee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='auth.Group')),
            ],
        ),
        migrations.RenameField(
            model_name='profile',
            old_name='school_status',
            new_name='affiliation',
        ),
        migrations.RemoveField(
            model_name='profile',
            name='role',
        ),
        migrations.AlterUniqueTogether(
            name='position',
            unique_together=set([('committee', 'index'), ('committee', 'name')]),
        ),
        migrations.CreateModel(
            name='PositionHeld',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateField(default=members.models.get_current_term_start)),
                ('stop', models.DateField(blank=True, null=True)),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='members.Position')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-start', 'position'],
                'verbose_name_plural': 'Positions Held',
            },
        ),
        migrations.AddField(
            model_name='position',
            name='users',
            field=models.ManyToManyField(through='members.PositionHeld', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='committeemembership',
            unique_together=set([]),
        ),
        migrations.RemoveField(
            model_name='committeemembership',
            name='committee',
        ),
        migrations.RemoveField(
            model_name='committeemembership',
            name='user',
        ),
        migrations.DeleteModel(
            name='CommitteeMembership',
        ),
        migrations.AlterField(
            model_name='position',
            name='index',
            field=models.PositiveSmallIntegerField(default=0, help_text='Order to render on page.'),
        ),
        migrations.AlterModelOptions(
            name='position',
            options={'ordering': ['committee', 'index']},
        ),
        migrations.AddField(
            model_name='profile',
            name='facebook_url',
            field=models.URLField(blank=True),
        ),
        migrations.AddField(
            model_name='profile',
            name='linkedin_url',
            field=models.URLField(blank=True),
        ),
        migrations.AddField(
            model_name='profile',
            name='twitter_url',
            field=models.URLField(blank=True),
        ),
        migrations.CreateModel(
            name='Committee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='auth.Group')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='auth.Group')),
                ('contact_email', models.EmailField(blank=True, help_text="If blank, parent's email will be used if available.", max_length=254)),
                ('description', models.TextField(blank=True, help_text='Short description here on first line (next line blank!).<br><br>Elaborate here if you need.<br>Multiple lines if needed.', max_length=500)),
                ('show_email', models.BooleanField(default=True, help_text='If no self or parent Contact email; will not be displayed.')),
            ],
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateField(default=functools.partial(members.models.get_current_term_start, *(), **{b'days': 365}), help_text="This term will extend to the next term's start date.")),
            ],
            options={
                'ordering': ['-start'],
            },
        ),
        migrations.RunPython(
            code=make_missing_committees,
        ),
    ]
