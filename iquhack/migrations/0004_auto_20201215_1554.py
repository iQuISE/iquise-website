# -*- coding: utf-8 -*-
# Generated by Django 1.11.15 on 2020-12-15 20:54
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('iquhack', '0003_auto_20201215_1057'),
    ]

    operations = [
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=50)),
                ('answer', models.TextField(max_length=1000)),
                ('general', models.BooleanField(default=True, help_text="Check this if this question and answer pair are general enough for any hackathon. If unchecked, it won't be listed in the hackathon's list of available FAQs.")),
            ],
            options={
                'verbose_name': 'FAQ',
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20, unique=True)),
                ('content', models.TextField(help_text="You can use the Django template language. The following context will be available:\nhackathon: The Hackathon database object.\nformatted_event_date: The event's date formatted like 'February 1st-2nd'\n", max_length=1000)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UsedFAQ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.PositiveSmallIntegerField(default=0, help_text='Higher numbers get rendered lower on page.', unique=True)),
                ('FAQ', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='iquhack.FAQ')),
            ],
            options={
                'ordering': ['index'],
                'verbose_name': 'Used FAQ',
            },
        ),
        migrations.CreateModel(
            name='UsedSection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.PositiveSmallIntegerField(default=0, help_text='Higher numbers get rendered lower on page.', unique=True)),
            ],
            options={
                'ordering': ['index'],
            },
        ),
        migrations.AlterModelOptions(
            name='hackathon',
            options={'ordering': ['-start_date']},
        ),
        migrations.AlterModelOptions(
            name='sponsorship',
            options={'ordering': ['-platform', 'tier']},
        ),
        migrations.AddField(
            model_name='usedsection',
            name='hackathon',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='iquhack.Hackathon'),
        ),
        migrations.AddField(
            model_name='usedsection',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='iquhack.Section'),
        ),
        migrations.AddField(
            model_name='usedfaq',
            name='hackathon',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='iquhack.Hackathon'),
        ),
        migrations.AddField(
            model_name='hackathon',
            name='FAQs',
            field=models.ManyToManyField(through='iquhack.UsedFAQ', to='iquhack.FAQ'),
        ),
        migrations.AddField(
            model_name='hackathon',
            name='sections',
            field=models.ManyToManyField(through='iquhack.UsedSection', to='iquhack.Section'),
        ),
        migrations.AlterUniqueTogether(
            name='usedsection',
            unique_together=set([('hackathon', 'section')]),
        ),
        migrations.AlterUniqueTogether(
            name='usedfaq',
            unique_together=set([('hackathon', 'FAQ')]),
        ),
    ]
